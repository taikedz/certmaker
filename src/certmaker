#!/usr/bin/env bash

# This software is Free Software
# (C) Tai Kedzierski 2017-2018
#
# It is provided to you under the terms of the GNU General Public License v3
# https://www.gnu.org/licenses/gpl-3.0.html

#%include help.sh
#%include guide.sh
#%include cert-getter.sh

#%include std/safe.sh
#%include std/autohelp.sh
#%include std/out.sh

#%include ctconf.sh
#%include template.sh
#%include ca.sh
#%include sign.sh
#%include files.sh
#%include host.sh
#%include new.sh
#%include renew.sh
#%include paths.sh
#%include quick.sh
#%include edit.sh
#%include csr.sh
#%include jks-manip.sh

cm:main() {
    # Do not autohelp:check here, as it would override sub-topic help
    [[ -n "$*" ]] || {
        autohelp:print
        exit 0
    }
    action="$1"; shift || :

    # Config-less modules
    case "$action" in
        view|fetch)
            cert-getter:main "$action" "$@"
            return
            ;;
        jks)
            jksm:main "$@"
            return
            ;;
        help|--help)
            cm:guide
            return 0
            ;;
    esac

    cm:config:load_config
    cm:checkuser

    case "$action" in
        template)
            cm:template "$@"
            ;;
	csr)
		cm:csr "$@"
		;;
        new)
            cm:new "$@"
            ;;
        edit)
            cm:edit "$@"
            ;;
        sign)
            cm:sign "$@"
            ;;
        renew)
            cm:renew "$@"
            ;;
        paths)
            cm:paths:_dispatch "$@"
            ;;
        quick)
            cm:quick "$@"
            ;;
        *)
            autohelp:print
            out:fail "Unknown action $action"
            ;;
    esac
}

cm:checkuser() {
    local iam=$(whoami)

    if [[ "$cmuser" = root ]] && [[ "$iam" != 'root' ]]; then
        out:fail "CertMaker is installed for the root user. Only the root user can use it now."
    fi

    [[ "$cmuser" = "$iam" ]] || {
        out:warn "Loaded Certmaker config was installed for '$cmuser'."
        askuser:confirm "Continue?"
    }
}

cm:helpcheck() {

    local section="$1"; shift

    if [[ "$*" =~ --help ]] || [[ -z "$*" ]]; then
        autohelp:print "$section"
        exit 0
    fi

    return 0
}

cm:main "$@"
