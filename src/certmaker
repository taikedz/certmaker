#!/usr/bin/env bash

# This software is Free Software
# (C) Tai Kedzierski 2017-2018
#
# It is provided to you under the terms of the GNU General Public License v3
# https://www.gnu.org/licenses/gpl-3.0.html

### certmaker Usage:help
#
# Tool to generate a CA, generate keys and CSRs, and sign CSRs
#
# From https://github.com/taikedz/CertMaker
#
# Run
#
#   certmaker help
#
# for a quick-start manual
# 
# ### Listing profiles
#
# List host profiles
#
#   certmaker paths
#
# List key and certificate for a host profile
#
#   certmaker paths HOST
#
#
# ### Creating and signing profiles
#
# Create a new host profile, edit it:
#
#     certmaker new host HOST
#     certmaker edit HOST
#
# Regenerate host profile assets
#
#   certmaker renew key { HOST | CONFIG [KEYFILE] }
#   certmaker renew csr { HOST | KEYFILE CONFIG [CSRFILE] }
#
# Sign a host profile or CSR file:
#
#     certmaker sign { HOST | CSRFILE [CERTFILE] }
#
#
# ### Generate new CA or templates
#
# Generate a new template configuration file
#
#   certmaker template { ca | host } [CONFFILE]
#
# Create a new CA:
#
#     certmaker new ca CONFFILE
#
# ### Certificate viewing and fetching
#
# Fetch a site's certificate, and view a certificate file
#
#
###/doc

#%include safe.sh autohelp.sh out.sh
#%include ctconf.sh template.sh ca.sh sign.sh files.sh host.sh new.sh renew.sh paths.sh

#%include guide.sh cert-getter.sh

cm:main() {
    # Do not autohelp:check here, as it would override sub-topic help
    [[ -n "$*" ]] || {
        autohelp:print
        exit 0
    }
    action="$1"; shift || :

    case "$action" in
        view|fetch)
            cert-getter:main "$action" "$@"
            return
            ;;
        help|--help)
            cm:guide
            return 0
            ;;
    esac

    cm:config:load_config

    case "$action" in
        template)
            cm:template "$@"
            ;;
        new)
            cm:new "$@"
            ;;
        edit)
            cm:host:edit-host "$@"
            ;;
        sign)
            cm:sign "$@"
            ;;
        renew)
            cm:renew "$@"
            ;;
        paths)
            cm:paths "$@"
            ;;
        *)
            autohelp:print
            out:fail "Unknown action $action"
            ;;
    esac
}

cm:helpcheck() {
    local section="$1"; shift

    [[ "$*" =~ --help ]] || return 0

    autohelp:print "$section"

    exit 0
}

cm:main "$@"
